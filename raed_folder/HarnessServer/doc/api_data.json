[
  {
    "type": "delete",
    "url": "/invitation/:srcUid/:destUid/:srcRole/:destRole",
    "title": "Remove invitation",
    "name": "DeleteInvitation",
    "group": "Invitation",
    "version": "0.1.0",
    "description": "<p>Remove relation. If the <code>srcUid</code> or <code>destUid</code> do not exist, return UidNotFoundError</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "srcUid",
            "description": "<p>Sender user id</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "destUid",
            "description": "<p>Destination user id</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "srcRole",
            "description": "<p>Sender user role</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "destRole",
            "description": "<p>Destination user role</p>"
          }
        ]
      }
    },
    "filename": "./api.go",
    "groupTitle": "Invitation",
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "UidNotFound",
            "description": "<p>The <code>uid</code> is not found</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Error-Response:",
          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"UidNotFound\"\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "get",
    "url": "/invitations/:uid",
    "title": "Look up invitations",
    "name": "GetReceivedInvitations",
    "group": "Invitation",
    "version": "0.1.0",
    "description": "<p>Get all pending invitation. If the <code>uid</code> do not exist, return UidNotFoundError</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "uid",
            "description": "<p>Destination user's id</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Relation",
            "optional": false,
            "field": "invitations",
            "description": "<p>List of the received invitation</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \"invitations\": [\n   \t{\n  \t \t\"src\": \"556171\",\n  \t \t\"role\": {\n  \t \t\t\"srcRole\": \"doctor\",\n  \t \t\t\"destRole\": \"patient\"\n  \t \t}\n     },\n   \t{\n  \t \t\"src\": \"17117\",\n  \t \t\"role\": {\n  \t \t\t\"srcRole\": \"pharmacist\",\n  \t \t\t\"destRole\": \"patient\"\n  \t \t}\n     }\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "./api.go",
    "groupTitle": "Invitation",
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "UidNotFound",
            "description": "<p>The <code>uid</code> is not found</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Error-Response:",
          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"UidNotFound\"\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "post",
    "url": "/invitation/:srcUid/:destUid/:srcRole/:destRole",
    "title": "Add invitation",
    "name": "PostInvitation",
    "group": "Invitation",
    "version": "0.1.0",
    "description": "<p>Add new invitation. If the <code>srcUid</code> or <code>destUid</code> do not exist, return UidNotFoundError</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "srcUid",
            "description": "<p>Sender user id</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "destUid",
            "description": "<p>destination user id</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "srcRole",
            "description": "<p>Sender role</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "destRole",
            "description": "<p>destination role</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "string",
            "optional": false,
            "field": "src",
            "description": "<p>Sender user id</p>"
          },
          {
            "group": "Success 200",
            "type": "string",
            "optional": false,
            "field": "dest",
            "description": "<p>Target user id</p>"
          },
          {
            "group": "Success 200",
            "type": "string",
            "optional": false,
            "field": "status",
            "description": "<p>Invitation status</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 201 Created",
          "type": "json"
        }
      ]
    },
    "filename": "./api.go",
    "groupTitle": "Invitation",
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "UidNotFound",
            "description": "<p>The <code>uid</code> is not found</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Error-Response:",
          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"UidNotFound\"\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "get",
    "url": "/notifications/:uid",
    "title": "Look up notifications",
    "name": "GetReceivedNotifications",
    "group": "Notification",
    "version": "0.1.0",
    "description": "<p>Get all received message notification to user. If the <code>uid</code> do not exist, return UidNotFoundError</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "uid",
            "description": "<p>Target user's id</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "[]Notif",
            "optional": false,
            "field": "notifications",
            "description": "<p>List of the received notifications</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \"notifications\": [\n   \t{\n  \t \t\"src\": \"556171\",\n    \t \t\"dateTime\": \"2017-11-19 17:15:45\"\n     },\n   \t{\n  \t \t\"src\": \"17117\",\n    \t \t\"dateTime\": \"2017-11-20 8:34:22\"\n     },\n   \t{\n  \t \t\"src\": \"364346\",\n    \t \t\"dateTime\": \"2017-11-20 11:55:53\"\n     }\n  ]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "./api.go",
    "groupTitle": "Notification",
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "UidNotFound",
            "description": "<p>The <code>uid</code> is not found</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Error-Response:",
          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"UidNotFound\"\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "post",
    "url": "/notification",
    "title": "Add notification",
    "name": "PostNotification",
    "group": "Notification",
    "version": "0.1.0",
    "description": "<p>Add new message notification. If the <code>srcUid</code> or <code>destUid</code> do not exist, return UidNotFoundError</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "srcUid",
            "description": "<p>Sender user id</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "destUid",
            "description": "<p>Target user id</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "string",
            "optional": false,
            "field": "src",
            "description": "<p>Sender user id</p>"
          },
          {
            "group": "Success 200",
            "type": "string",
            "optional": false,
            "field": "dest",
            "description": "<p>Target user id</p>"
          },
          {
            "group": "Success 200",
            "type": "string",
            "optional": false,
            "field": "dateTime",
            "description": "<p>Time of sending notification</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 Created",
          "type": "json"
        }
      ]
    },
    "filename": "./api.go",
    "groupTitle": "Notification",
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "UidNotFound",
            "description": "<p>The <code>uid</code> is not found</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Error-Response:",
          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"UidNotFound\"\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "put",
    "url": "/beatHeart/:uid/",
    "title": "Beat Heart",
    "name": "BeatHeart",
    "group": "User",
    "version": "0.1.0",
    "description": "<p>Update the current IP address of the user</p>",
    "parameter": {
      "examples": [
        {
          "title": "The body of the request is in json format. Example:",
          "content": "{\n \"currentip\": \"10.1.2.3\"\n}",
          "type": "json"
        }
      ],
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "uid",
            "description": "<p>User's id</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 204 No content",
          "type": "json"
        }
      ]
    },
    "filename": "./api.go",
    "groupTitle": "User",
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "UidNotFound",
            "description": "<p>The <code>uid</code> is not found</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Error-Response:",
          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"UidNotFound\"\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "get",
    "url": "/user/getUid/:name",
    "title": "Look up uid",
    "name": "GetUserByName",
    "group": "User",
    "version": "0.1.0",
    "description": "<p>Get <code>uid</code> of the user with given <code>name</code>. If not found, return a UserNameNotFoundError</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "name",
            "description": "<p>User's name</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "string",
            "optional": false,
            "field": "uid",
            "description": "<p>Users-ID</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  [{\"uid\": \"12461\"}]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "./api.go",
    "groupTitle": "User",
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "UerNameNotFound",
            "description": "<p>The <code>name</code> is not found</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Error-Response:",
          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"UerNameNotFound\"\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "get",
    "url": "/user/getIp/:uid",
    "title": "Look up ip",
    "name": "GetUserIpByUid",
    "group": "User",
    "version": "0.1.0",
    "description": "<p>Get <code>currentIp</code> of the user with given <code>uid</code>. If not found, return a UidNotFoundError</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "uid",
            "description": "<p>User's id</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "string",
            "optional": false,
            "field": "currentIp",
            "description": "<p>User's current IP address</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \"currentIp\": \"127.15.1.145\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "./api.go",
    "groupTitle": "User",
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "UidNotFound",
            "description": "<p>The <code>uid</code> is not found</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Error-Response:",
          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"UidNotFound\"\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "post",
    "url": "/user",
    "title": "Subscribe a new user",
    "name": "PostUser",
    "group": "User",
    "version": "0.1.0",
    "description": "<p>Generate unique Users-ID and add new user account in the HArNESS data base</p>",
    "parameter": {
      "examples": [
        {
          "title": "The body of the request is in json format. Example:",
          "content": "{\n\t\"uid\": \"\",\n \"fhirid\": \"191021\",\n\t\"name\": \"Jane\",\n\t\"password\": \"ac65c0f32e6a9083b6a3f8dc8badd576\",\n\t\"email\": \"name@example.com\",\n\t\"address\": \"Geneva\",\n\t\"phoneNumber\": \"004125466321\",\n\t\"roles\": [\"patient\", \"doctor\"],\n\t\"timestamp\": \"3600\",\n\t\"currentip\": \"\"\n}",
          "type": "json"
        }
      ]
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "string",
            "optional": false,
            "field": "uid",
            "description": "<p>Users-ID</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 201 (Created)\n{\n  \"uid\": \"12461\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "./api.go",
    "groupTitle": "User",
    "error": {
      "fields": {
        "Error 5xx": [
          {
            "group": "Error 5xx",
            "optional": false,
            "field": "UserNameAlreadyExist",
            "description": "<p>The <code>userName</code> already exists</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Error-Response:",
          "content": "HTTP/1.1 400 Not Found\n{\n  \"error\": \"UserNameAlreadyExist\"\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "optional": false,
            "field": "varname1",
            "description": "<p>No type.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "varname2",
            "description": "<p>With type.</p>"
          }
        ]
      }
    },
    "type": "",
    "url": "",
    "version": "0.0.0",
    "filename": "./doc/main.js",
    "group": "_home_raed_go_src_ECE495_raed_folder_HarnessServer_doc_main_js",
    "groupTitle": "_home_raed_go_src_ECE495_raed_folder_HarnessServer_doc_main_js",
    "name": ""
  }
]
